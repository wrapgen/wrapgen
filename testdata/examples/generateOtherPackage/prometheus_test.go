// Code generated by WrapGen. DO NOT EDIT.
package generateOtherPackage_test

import (
	"time"

	"github.com/wrapgen/wrapgen/testdata/examples/generateOtherPackage"

	"github.com/prometheus/client_golang/prometheus"
)

type PrometheusTestWithPrometheus struct {
	base generateOtherPackage.PrometheusTest
	metric prometheus.ObserverVec
	instanceName string
}

// NewPrometheusTestWithPrometheus returns an instance of the generateOtherPackage.PrometheusTest decorated with prometheus summary metric.
func NewPrometheusTestWithPrometheus(base generateOtherPackage.PrometheusTest, metric prometheus.ObserverVec, instanceName string) *PrometheusTestWithPrometheus {
	return &PrometheusTestWithPrometheus{
		base: base,
		metric: metric,
		instanceName: instanceName,
	}
}


func (_d *PrometheusTestWithPrometheus) Foo(someVar generateOtherPackage.SomeType) (out0 int) {
	_since := time.Now()
	defer func() {
		result := "ok"
		_d.metric.WithLabelValues(_d.instanceName, "Foo", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.Foo(someVar)
}


