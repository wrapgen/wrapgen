// Code generated by WrapGen. DO NOT EDIT.
package variadic

import (
	"net/http"
	"reflect"

	"go.uber.org/mock/gomock"
)

// MockVariadicParametersUntyped is a mock of VariadicParametersUntyped interface.
type MockVariadicParametersUntyped struct {
	ctrl     *gomock.Controller
	recorder *MockVariadicParametersUntypedMockRecorder
}

// MockVariadicParametersUntypedMockRecorder is the mock recorder for MockVariadicParametersUntyped.
type MockVariadicParametersUntypedMockRecorder struct {
	mock *MockVariadicParametersUntyped
}

// NewMockVariadicParametersUntyped creates a new mock instance.
func NewMockVariadicParametersUntyped(ctrl *gomock.Controller) *MockVariadicParametersUntyped {
	mock := &MockVariadicParametersUntyped{ctrl: ctrl}
	mock.recorder = &MockVariadicParametersUntypedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVariadicParametersUntyped) EXPECT() *MockVariadicParametersUntypedMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockVariadicParametersUntyped) ISGOMOCK() struct{} {
	return struct{}{}
}

// Test1 mocks base method.
func (m *MockVariadicParametersUntyped) Test1(a ...int) {
	m.ctrl.T.Helper()
	varargs := []any{}
	for _, a := range a {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Test1", varargs...)
	
}

// Test1 indicates an expected call of Test1.
func (mr *MockVariadicParametersUntypedMockRecorder) Test1(a ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{}, a...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test1", reflect.TypeOf((*MockVariadicParametersUntyped)(nil).Test1), varargs...)
}


// Test2 mocks base method.
func (m *MockVariadicParametersUntyped) Test2(b ...B) {
	m.ctrl.T.Helper()
	varargs := []any{}
	for _, a := range b {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Test2", varargs...)
	
}

// Test2 indicates an expected call of Test2.
func (mr *MockVariadicParametersUntypedMockRecorder) Test2(b ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{}, b...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test2", reflect.TypeOf((*MockVariadicParametersUntyped)(nil).Test2), varargs...)
}


// Test3 mocks base method.
func (m *MockVariadicParametersUntyped) Test3(c ...http.Request) {
	m.ctrl.T.Helper()
	varargs := []any{}
	for _, a := range c {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Test3", varargs...)
	
}

// Test3 indicates an expected call of Test3.
func (mr *MockVariadicParametersUntypedMockRecorder) Test3(c ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{}, c...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test3", reflect.TypeOf((*MockVariadicParametersUntyped)(nil).Test3), varargs...)
}

